generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String?
  email     String     @unique
  password  String?
  image     String?
  role      Role       @default(SELLER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("users")
}

model Question {
  id        String     @id @default(cuid())
  text      String     @db.LongText
  subject   Subject
  level     Level
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  options Option[]
  answers Answer[]

  @@map("questions")
}

model Option {
  id         String   @id @default(cuid())
  text       String
  value      Float
  questionId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  answers    Answer[]

  @@map("options")
}

model Test {
  id         String     @id @default(cuid())
  leadId     String
  score      Float?
  subject    Subject
  level      Level
  startedAt  DateTime   @default(now())
  finishedAt DateTime?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  lead       Lead       @relation(fields: [leadId], references: [id], onDelete: Cascade)
  answers    Answer[]

  @@map("tests")
}

model Answer {
  id         String    @id @default(cuid())
  testId     String
  questionId String
  optionId   String?
  createdAt  DateTime  @default(now())

  test       Test      @relation(fields: [testId], references: [id], onDelete: Cascade)
  question   Question  @relation(fields: [questionId], references: [id])
  option     Option?   @relation(fields: [optionId], references: [id])

  @@map("answers")
}

model Lead {
  id              String     @id @default(cuid())
  name            String
  email           String     @unique
  phone           String?
  testLevel       Level?
  testSubject     Subject?
  fromTest        Boolean    @default(false)
  stage           LeadStage  @default(PENDENTE)
  observations    String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  leadTests Test[]

  @@map("leads")
}

enum Role {
  SELLER
  MASTER
  ADMIN
}

enum Subject {
  excel
  sql
  python
  powerbi
}

enum Level {
  fundamental
  essencial
  avancado
}

enum LeadStage {
  PENDENTE
  CONTRATADO
  CONVERTIDO
}
